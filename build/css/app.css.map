{"version":3,"sources":["helpers/_reset.sass","_common.sass","generated/_sprite-svg.scss","_main.sass","app.css","helpers/_flexbox.sass","helpers/_helpers.sass","helpers/_mixins.sass"],"names":[],"mappings":"AAAA,8YAQI,SAAU,AACV,UAAW,AACX,SAAU,AACV,uBAAyB,CAX7B,AAWgC,aAH5B,SAAU,AACV,UAAW,AAEX,uBAAyB,CAAG,AAChC,KACI,0BAA2B,AAC3B,8BAA+B,AA8B/B,sBAAuB,AC3C1B,mCAAsC,CDaD,AACtC,mBACI,WAAa,CAAG,AACpB,4DAII,uBAAyB,CAAG,AAChC,0BAEI,cAAgB,CAGG,AALvB,8DAIQ,UAAW,AACX,QAAU,CAAG,AACrB,SACI,aAAe,CAAG,AACtB,aACI,SAAU,AACV,UAAW,AACX,QAAU,CAAG,AACjB,kEAEI,YAAc,CAAG,AACrB,MACI,oBAAsB,CAAG,AAC7B,MACI,iBAAkB,AAClB,yBAA0B,AAC1B,UAAY,CAAG,AAGnB,iBACI,kBAAoB,CAAG,AE9C3B,gCACE,aAAc,AACd,WAAY,AACZ,YAAc,CACf,AACD,gBACE,YAAc,CAGf,AACD,gCACE,aAAc,AACd,WAAY,AACZ,YAAc,CACf,AACD,gBACE,SAAW,CAGZ,AACD,gCACE,aAAc,AACd,WAAY,AACZ,YAAc,CACf,AACD,gBACE,YAAc,CAGf,AACD,gCACE,YAAa,AACb,WAAY,AACZ,YAAc,CACf,AACD,gBACE,YAAc,CAGf,ACvCD,KACC,2EAA2B,AAC3B,4BAA6B,AAC7B,yCAA2C,CAAG,AAE/C,yBACI,MACC,0BAA4B,CCsI9B,ADrIC,IACC,4BAA8B,CCuIhC,CAIF,ADvID,SEPE,kBAAmB,AACnB,oBAAqB,AACrB,aAAc,AFOf,oBAAqB,AEwHd,qBFvHwB,AEyH5B,4BFzH4B,AE0H5B,uBF1H4B,AEuIxB,wBFtIsB,AEwI1B,0BFxI0B,AEyI1B,qBFzI0B,AEiCtB,mBFhCgB,AEiCpB,eFjCoB,AACvB,iBAAkB,AAClB,kBAAmB,AACnB,aAAe,CAME,AAElB,SEqFI,mBFpFmB,AEqFnB,kBFrFmB,AEsFnB,cFtFmB,AACtB,kBAAmB,AACnB,mBAAqB,CAWE,AAdxB,aAKE,WAAY,AACZ,aAAc,AACd,gBAAkB,CAOE,AACtB,gBAEE,qBAAsB,AACtB,eAAgB,AAChB,gBAAiB,AACjB,cAAe,AACf,qBAAuB,AACvB,gBAAiB,AACjB,gBAAiB,AGHf,kBHIgB,AAClB,oCAAsC,AACtC,eAAgB,AAChB,sBAAuB,AACvB,UAAY,CAAG,AAIjB,OACC,YAAc,CAAG,AAClB,OACC,YAAc,CAAG,AAElB,OACC,YAAc,CAAG,AAClB,OACC,YAAc,CAAG,AAElB,OACC,YAAc,CAAG,AAClB,OACC,YAAc,CAAG,AAElB,OACC,YAAc,CAAG,AAClB,OACC,YAAc,CI7Eb,AJ6EgB,0CAlElB,SAUE,kBAAoB,CAIJ,AAElB,aASG,mBAAoB,AACpB,YAAc,CAIK,CCyIrB,AGlLC,yCJWF,SAYE,kBAAoB,CAEJ,AAElB,aAYG,iBAAmB,CAEA,CC+IrB,AGxLC,yCJWF,SAcE,SAAW,CAAK,AAElB,aAcG,YAAc,CAAK,CHKtB,AIgJC,uCJ/IG,EACI,yBAA4B,CAAG,CI4BtC","file":"app.css","sourcesContent":["html, body, div, span, applet, object, iframe,h1, h2, h3, h4, h5,\nh6, p, blockquote, pre,a, abbr, acronym, address, big,\ncite, code,del, dfn, em, img, ins, kbd, q, s, samp,small,\nstrike, strong, sub, sup, tt, var,b, u, i, center,dl, dt,\ndd, ol, ul, li,fieldset, form, label, legend,table, caption,\ntbody, tfoot, thead, tr, th, td,article, aside, canvas, details,\nembed, figure, figcaption, footer, header, hgroup, menu, nav,\noutput, ruby, section, summary,time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    vertical-align: baseline; }\nhtml {\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%; }\nimg,fieldset, a img {\n    border: none; }\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\ntextarea {\n    -webkit-appearance: none; }\ninput[type=\"submit\"],\nbutton {\n    cursor: pointer;\n    &::-moz-focus-inner {\n        padding: 0;\n        border: 0; } }\ntextarea {\n    overflow: auto; }\ninput, button {\n    margin: 0;\n    padding: 0;\n    border: 0; }\ndiv, input, textarea, select,button,\nh1,h2,h3,h4,h5,h6,a,span,a:focus {\n    outline: none; }\nul,ol {\n    list-style-type: none; }\ntable {\n    border-spacing: 0;\n    border-collapse: collapse;\n    width: 100%; }\nhtml {\n    box-sizing: border-box; }\n*, *:before, *:after {\n    box-sizing: inherit; }\n\n@media (prefers-reduced-motion: reduce) {\n    * {\n        transition: none !important; } }\n","html {\n\tfont-family: 'Montserrat', sans-serif; }\n",".icon-origami_1 {\n  width: 3.04em;\n  height: 1em;\n  fill: initial;\n}\n.icon-origami_2 {\n  width: 2.35em;\n  height: 1em;\n  fill: initial;\n}\n.icon-origami_3 {\n  width: 3.12em;\n  height: 1em;\n  fill: initial;\n}\n.icon-origami_4 {\n  width: 3em;\n  height: 1em;\n  fill: initial;\n}\n.icon-origami_5 {\n  width: 1.93em;\n  height: 1em;\n  fill: initial;\n}\n.icon-origami_6 {\n  width: 3.34em;\n  height: 1em;\n  fill: initial;\n}\n.icon-origami_7 {\n  width: 1.4em;\n  height: 1em;\n  fill: initial;\n}\n.icon-origami_8 {\n  width: 2.84em;\n  height: 1em;\n  fill: initial;\n}\n",".out {\n\tbackground: linear-gradient(201deg, #376d5f, #30d1a7, #b3f6e5, #688d84, #2965c2);\n\tbackground-size: 1000% 1000%;\n\tanimation: AnimationName 46s ease infinite; }\n\n@keyframes AnimationName {\n    0% {\n    \tbackground-position: 84% 0%; }\n    50% {\n    \tbackground-position: 17% 100%; }\n    100% {\n    \tbackground-position: 84% 0%; } }\n\n.content {\n\t@include flexbox;\n\tpadding: 250px 100px;\n\t@include justify-content(center);\n\t@include align-items(baseline);\n\t@include flex-wrap(wrap);\n\tmax-width: 1200px;\n\tmin-height: 1200px;\n\tmargin: 0 auto;\n\t@include r(1025) {\n\t\tpadding: 150px 50px; }\n\t@include r(768) {\n\t\tpadding: 150px 25px; }\n\t@include r(600) {\n\t\tpadding: 0; } }\n\n.svg-box {\n\t@include flex(0 0 100%);\n\ttext-align: center;\n\tmargin-bottom: 100px;\n\tsvg {\n\t\twidth: 100%;\n\t\theight: 500px;\n\t\tpadding: 65px 25%;\n\t\t@include r(1025) {\n\t\t\tpadding: 15px 150px;\n\t\t\theight: 750px; }\n\t\t@include r(768) {\n\t\t\tpadding: 25px 50px; }\n\t\t@include r(600) {\n\t\t\tpadding: 25px; } } }\n.button {\n\t&_trigger {\n\t\tdisplay: inline-block;\n\t\tmin-width: 88px;\n\t\tmin-height: 40px;\n\t\tmargin: 0 auto;\n\t\tpadding: 0.66em 1.22em;\n\t\tfont-weight: 300;\n\t\tline-height: 1.4;\n\t\t@include borad(2px,all);\n\t\tfont-family: 'Montserrat', sans-serif;\n\t\tfont-size: 1rem;\n\t\tbackground-color: #333;\n\t\tcolor: #fff; } }\n\n// Stickers styling\n\n.st0_1 {\n\tfill: #0071BC; }\n.st1_1 {\n\tfill: #1B1464; }\n\n.st0_2 {\n\tfill: #ED1E79; }\n.st1_2 {\n\tfill: #9E005D; }\n\n.st0_3 {\n\tfill: #22B573; }\n.st1_3 {\n\tfill: #006837; }\n\n.st0_4 {\n\tfill: #FCEE21; }\n.st1_4 {\n\tfill: #FF931E; }\n","html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5,\nh6, p, blockquote, pre, a, abbr, acronym, address, big,\ncite, code, del, dfn, em, img, ins, kbd, q, s, samp, small,\nstrike, strong, sub, sup, tt, var, b, u, i, center, dl, dt,\ndd, ol, ul, li, fieldset, form, label, legend, table, caption,\ntbody, tfoot, thead, tr, th, td, article, aside, canvas, details,\nembed, figure, figcaption, footer, header, hgroup, menu, nav,\noutput, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n\nhtml {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n\nimg, fieldset, a img {\n  border: none;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\ntextarea {\n  -webkit-appearance: none;\n}\n\ninput[type=\"submit\"],\nbutton {\n  cursor: pointer;\n}\n\ninput[type=\"submit\"]::-moz-focus-inner,\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\ntextarea {\n  overflow: auto;\n}\n\ninput, button {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\ndiv, input, textarea, select, button,\nh1, h2, h3, h4, h5, h6, a, span, a:focus {\n  outline: none;\n}\n\nul, ol {\n  list-style-type: none;\n}\n\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n  width: 100%;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  * {\n    transition: none !important;\n  }\n}\n\n.icon-origami_1 {\n  width: 3.04em;\n  height: 1em;\n  fill: initial;\n}\n\n.icon-origami_2 {\n  width: 2.35em;\n  height: 1em;\n  fill: initial;\n}\n\n.icon-origami_3 {\n  width: 3.12em;\n  height: 1em;\n  fill: initial;\n}\n\n.icon-origami_4 {\n  width: 3em;\n  height: 1em;\n  fill: initial;\n}\n\n.icon-origami_5 {\n  width: 1.93em;\n  height: 1em;\n  fill: initial;\n}\n\n.icon-origami_6 {\n  width: 3.34em;\n  height: 1em;\n  fill: initial;\n}\n\n.icon-origami_7 {\n  width: 1.4em;\n  height: 1em;\n  fill: initial;\n}\n\n.icon-origami_8 {\n  width: 2.84em;\n  height: 1em;\n  fill: initial;\n}\n\nhtml {\n  font-family: 'Montserrat', sans-serif;\n}\n\n.out {\n  background: linear-gradient(201deg, #376d5f, #30d1a7, #b3f6e5, #688d84, #2965c2);\n  background-size: 1000% 1000%;\n  animation: AnimationName 46s ease infinite;\n}\n\n@keyframes AnimationName {\n  0% {\n    background-position: 84% 0%;\n  }\n  50% {\n    background-position: 17% 100%;\n  }\n  100% {\n    background-position: 84% 0%;\n  }\n}\n\n.content {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 250px 100px;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  -webkit-justify-content: center;\n  -moz-justify-content: center;\n  justify-content: center;\n  -webkit-box-align: baseline;\n  -ms-flex-align: baseline;\n  -webkit-align-items: baseline;\n  -moz-align-items: baseline;\n  align-items: baseline;\n  -webkit-flex-wrap: wrap;\n  -moz-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  max-width: 1200px;\n  min-height: 1200px;\n  margin: 0 auto;\n}\n\n@media only screen and (max-width: 1025px) {\n  .content {\n    padding: 150px 50px;\n  }\n}\n\n@media only screen and (max-width: 768px) {\n  .content {\n    padding: 150px 25px;\n  }\n}\n\n@media only screen and (max-width: 600px) {\n  .content {\n    padding: 0;\n  }\n}\n\n.svg-box {\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 100%;\n  -moz-box-flex: 0;\n  -moz-flex: 0 0 100%;\n  -ms-flex: 0 0 100%;\n  flex: 0 0 100%;\n  text-align: center;\n  margin-bottom: 100px;\n}\n\n.svg-box svg {\n  width: 100%;\n  height: 500px;\n  padding: 65px 25%;\n}\n\n@media only screen and (max-width: 1025px) {\n  .svg-box svg {\n    padding: 15px 150px;\n    height: 750px;\n  }\n}\n\n@media only screen and (max-width: 768px) {\n  .svg-box svg {\n    padding: 25px 50px;\n  }\n}\n\n@media only screen and (max-width: 600px) {\n  .svg-box svg {\n    padding: 25px;\n  }\n}\n\n.button_trigger {\n  display: inline-block;\n  min-width: 88px;\n  min-height: 40px;\n  margin: 0 auto;\n  padding: 0.66em 1.22em;\n  font-weight: 300;\n  line-height: 1.4;\n  -webkit-border-radius: 2px;\n  -moz-border-radius: 2px;\n  -ms-border-radius: 2px;\n  border-radius: 2px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 1rem;\n  background-color: #333;\n  color: #fff;\n}\n\n.st0_1 {\n  fill: #0071BC;\n}\n\n.st1_1 {\n  fill: #1B1464;\n}\n\n.st0_2 {\n  fill: #ED1E79;\n}\n\n.st1_2 {\n  fill: #9E005D;\n}\n\n.st0_3 {\n  fill: #22B573;\n}\n\n.st1_3 {\n  fill: #006837;\n}\n\n.st0_4 {\n  fill: #FCEE21;\n}\n\n.st1_4 {\n  fill: #FF931E;\n}\n","\n\n\n@mixin flexbox {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex; }\n\n//----------------------------------\n\n@mixin inline-flex {\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -moz-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n\n\n }  //----------------------------------\n\n@mixin flex-direction($value: row) {\n    @if $value == row-reverse {\n        -webkit-box-direction: reverse;\n        -webkit-box-orient: horizontal; }\n    @else if $value == column {\n        -webkit-box-direction: normal;\n        -webkit-box-orient: vertical; }\n    @else if $value == column-reverse {\n        -webkit-box-direction: reverse;\n        -webkit-box-orient: vertical; }\n    @else {\n        -webkit-box-direction: normal;\n        -webkit-box-orient: horizontal; }\n    -webkit-flex-direction: $value;\n    -moz-flex-direction: $value;\n    -ms-flex-direction: $value;\n    flex-direction: $value; }\n\n\n//----------------------------------------------------------------------\n\n@mixin flex-wrap($value: nowrap) {\n    // No Webkit Box fallback.\n    -webkit-flex-wrap: $value;\n    -moz-flex-wrap: $value;\n    @if $value == nowrap {\n        -ms-flex-wrap: none; }\n    @else {\n        -ms-flex-wrap: $value; }\n    flex-wrap: $value; }\n\n//----------------------------------------------------------------------\n\n\n@mixin flex-flow($values: (row nowrap)) {\n    // No Webkit Box fallback.\n    -webkit-flex-flow: $values;\n    -moz-flex-flow: $values;\n    -ms-flex-flow: $values;\n    flex-flow: $values; }\n\n//----------------------------------------------------------------------\n\n\n@mixin order($int: 0) {\n    -webkit-box-ordinal-group: $int + 1;\n    -webkit-order: $int;\n    -moz-order: $int;\n    -ms-flex-order: $int;\n    order: $int; }\n\n//----------------------------------------------------------------------\n\n\n@mixin flex-grow($int: 0) {\n    -webkit-box-flex: $int;\n    -webkit-flex-grow: $int;\n    -moz-flex-grow: $int;\n    -ms-flex-positive: $int;\n    flex-grow: $int; }\n\n//----------------------------------------------------------------------\n\n\n@mixin flex-shrink($int: 1) {\n    -webkit-flex-shrink: $int;\n    -moz-flex-shrink: $int;\n    -ms-flex-negative: $int;\n    flex-shrink: $int; }\n//----------------------------------------------------------------------\n\n\n@mixin flex-basis($value: auto) {\n    -webkit-flex-basis: $value;\n    -moz-flex-basis: $value;\n    -ms-flex-preferred-size: $value;\n    flex-basis: $value; }\n\n//----------------------------------------------------------------------\n\n@mixin flex($fg: 1, $fs: null, $fb: null) {\n\n    // Set a variable to be used by box-flex properties\n    $fg-boxflex: $fg;\n\n    // Box-Flex only supports a flex-grow value so let's grab the\n    // first item in the list and just return that.\n    @if type-of($fg) == 'list' {\n        $fg-boxflex: nth($fg, 1); }\n    -webkit-box-flex: $fg-boxflex;\n    -webkit-flex: $fg $fs $fb;\n    -moz-box-flex: $fg-boxflex;\n    -moz-flex: $fg $fs $fb;\n    -ms-flex: $fg $fs $fb;\n    flex: $fg $fs $fb; }\n\n\n//----------------------------------------------------------------------\n\n@mixin justify-content($value: flex-start) {\n    @if $value == flex-start {\n        -webkit-box-pack: start;\n        -ms-flex-pack: start; }\n    @else if $value == flex-end {\n        -webkit-box-pack: end;\n        -ms-flex-pack: end; }\n    @else if $value == space-between {\n        -webkit-box-pack: justify;\n        -ms-flex-pack: justify; }\n    @else if $value == space-around {\n        -ms-flex-pack: distribute; }\n    @else {\n        -webkit-box-pack: $value;\n        -ms-flex-pack: $value; }\n    -webkit-justify-content: $value;\n    -moz-justify-content: $value;\n    justify-content: $value; }\n\n//----------------------------------------------------------------------\n\n@mixin align-items($value: stretch) {\n    @if $value == flex-start {\n        -webkit-box-align: start;\n        -ms-flex-align: start; }\n    @else if $value == flex-end {\n        -webkit-box-align: end;\n        -ms-flex-align: end; }\n    @else {\n        -webkit-box-align: $value;\n        -ms-flex-align: $value; }\n    -webkit-align-items: $value;\n    -moz-align-items: $value;\n    align-items: $value; }\n\n\n//----------------------------------\n\n@mixin align-self($value: auto) {\n    // No Webkit Box Fallback.\n    -webkit-align-self: $value;\n    -moz-align-self: $value;\n    @if $value == flex-start {\n        -ms-flex-item-align: start; }\n    @else if $value == flex-end {\n        -ms-flex-item-align: end; }\n    @else {\n        -ms-flex-item-align: $value; }\n    align-self: $value; }\n\n\n//----------------------------------------------------------------------\n\n@mixin align-content($value: stretch) {\n    // No Webkit Box Fallback.\n    -webkit-align-content: $value;\n    -moz-align-content: $value;\n    @if $value == flex-start {\n      -ms-flex-line-pack: start; }\n    @else if $value == flex-end {\n      -ms-flex-line-pack: end; }\n    @else {\n      -ms-flex-line-pack: $value; }\n    align-content: $value; }\n\n","@function em($size, $context: 16) {\n  @return ($size/$context) * 1em; }\n\n@function img-url($image) {\n  @return url('../img/#{$image}'); }\n\n@mixin image($image) {\n  background-image: img-url($image); }\n\n@mixin trans($what: all, $dur: 0.2s, $easing: ease) {\n  transition: $what $dur $easing; }\n\n@mixin smooth-scroll {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin smooth-font {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\n@mixin gpu {\n  transform: translate3d(0,0,0); }\n\n@mixin md {\n  @include r(1023) {\n    @content; } }\n\n@mixin sm {\n  @include r(767) {\n    @content; } }\n\n@mixin xs {\n  @include r(599) {\n    @content; } }\n\n\n\n\n\n@mixin bg-cover($url) {\n  background:url($url) no-repeat center center {}\n  background-size: cover; }\n\n// Border:border radius\n\n@mixin borad($radius,$place) {\n  @if $place == 'all' {\n    -webkit-border-radius: $radius;\n    -moz-border-radius: $radius;\n    -ms-border-radius: $radius;\n    border-radius: $radius; }\n  @else {\n    -webkit-border-#{$place}-radius: $radius;\n    -moz-border-#{$place}-radius: $radius;\n    -ms-border-#{$place}-radius: $radius;\n    border-#{$place}-radius: $radius; } }\n\n@mixin transform($transforms) {\n  -webkit-transform: $transforms;\n  -moz-transform: $transforms;\n  -ms-transform: $transforms;\n  transform: $transforms; }\n","// width\n@mixin r($width) {\n  @media only screen and (max-width: $width+ \"px\") {\n    @content; } }\n\n@mixin rmin($width) {\n  @media only screen and (min-width: $width+ \"px\") {\n    @content; } }\n\n// height\n@mixin rh($height) {\n  @media only screen and (max-height: $height + \"px\") {\n    @content; } }\n\n@mixin rhmin($height) {\n  @media only screen and (min-height: $height + \"px\") {\n    @content; } }\n\n\n@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {\n  #{$property}: #{$max-size}#{$unit};\n  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));\n  @media (max-width: #{$min-width}#{$unit}) {\n    #{$property}: #{$min-size}#{$unit}; }\n  @media (min-width: #{$max-width}#{$unit}) {\n    #{$property}: #{$max-size}#{$unit}; } }\n\n@mixin fs($sizeValue: 16) {\n  font-size: $sizeValue + px;\n  font-size: $sizeValue / 10 + rem; }\n\n@mixin text-overflow {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap; }\n\n@mixin hover {\n  .no-touch &:hover {\n    @content; } }\n\n%pseudo {\n  position: relative;\n  &:before,&:after {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0; } }\n@mixin pseudo {\n  @extend %pseudo; }\n\n@mixin coverdiv {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%; }\n\n@mixin cover {\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50% 50%; }\n\n@mixin bg-size($width: 100%, $height: 100%) {\n  background-size: $width $height; }\n\n// retina, also available as +hdpi\n@mixin retina {\n  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n    @content; } }\n\n// vertical-align at center\n@mixin vcenter {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%,-50%); }\n\n//simple gradient\n@mixin g($color1, $color2) {\n  background-image: linear-gradient($color1, $color2); }\n\n@mixin gh($color1, $color2) {\n  background-image: linear-gradient(left, $color1, $color2); }\n\n// font-family\n@mixin font($alias, $name) {\n  @font-face {\n    font-family: $alias;\n    src: url(\"../fonts/\" + $name + \".woff2\") format(\"woff2\"), url(\"../fonts/\" + $name + \".woff\") format(\"woff\");\n    font-weight: normal;\n    font-style: normal; } }\n// to use:\n//+font(black, cytiapro-black-webfont)\n\n// ROTATE\n@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {\n  transform: rotate($deg + deg);\n  filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand'); }\n\n// TRANSITION\n\n@mixin tr($what) {\n  transition: $what; }\n\n@mixin hide-text {\n  font: 0/0 a;\n  text-shadow: none;\n  color: transparent; }\n\n@mixin hidetext {\n  @include hide-text; }\n\n\n// IMPORTANT!!!! REQUIRES SPACES BETWEEN ELEMENTS, NO SUCH STUFF: </li><li>\n@mixin justify {\n  text-align: justify;\n  line-height: 0;\n  font-size: 0;\n  text-justify: newspaper;\n  text-align-last: justify;\n  &:after {\n    content: \"\";\n    display: inline-block;\n    width: 100%;\n    height: 0px;\n    visibility: hidden;\n    overflow: hidden; } }\n@mixin vertical {\n  text-align: center;\n  font-size: 0;\n  &:before {\n    content: \"\";\n    display: inline-block;\n    vertical-align: middle;\n    width: 0;\n    height: 100%; } }\n\n@mixin clr {\n  &:after {\n    content: \" \";\n    display: table;\n    clear: both; } }\n\n\n@mixin placeholder-color($color) {\n  &::placeholder {\n    color: $color; } }\n\n@mixin placeholder {\n  &::placeholder {\n    @content; } }\n\n@mixin gray {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'/></filter></svg>#grayscale\");\n  // Firefox 10+\n  filter: gray;\n  // IE6-9\n  -webkit-filter: grayscale(100%);\n  // Chrome 19+ & Safari 6+\n  filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1);\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)\"; }\n\n@mixin gray-half {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='saturate' values='0.5'/></filter></svg>#grayscale\");\n  // Firefox 10+\n  filter: gray alpha(opacity = 50);\n  // IE6-9\n  -webkit-filter: grayscale(50%);\n }  // Chrome 19+ & Safari 6+\n\n@mixin gray-zero {\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0'/></filter></svg>#grayscale\");\n  -webkit-filter: grayscale(0%); }\n\n@mixin unselectable {\n  user-select: none; }\n\n@mixin nosel {\n  @include unselectable; }\n\n@mixin prevent-text {\n  word-break: break-all;\n  word-break: break-word;\n  hyphens: auto; }\n\n@mixin font-smoothing($val: antialiased) {\n  font-smoothing: $val; }\n\n@mixin selection {\n  & ::selection {\n    @content; } }\n@mixin sel {\n  @include selection; }\n\n@mixin gpu {\n  transform: translate3d(0, 0, 0); }\n\n@mixin scrollbar {\n  &::-webkit-scrollbar {\n    @content; } }\n\n@mixin scrollbar-track {\n  &::-webkit-scrollbar-track {\n    @content; } }\n\n@mixin scrollbar-thumb {\n  &::-webkit-scrollbar-thumb {\n    @content; } }\n\n@mixin scrollbar-track-piece {\n  &::-webkit-scrollbar-track-piece {\n    @content; } }\n\n//triangle\n@mixin arr($width, $height, $bg, $direction) {\n  width: 0px;\n  height: 0px;\n  border-style: solid;\n  @if $direction == t {\n    border-width: 0 $width / 2 + px $height + px $width / 2 + px;\n    border-color: transparent transparent $bg transparent; }\n  @if $direction == r {\n    border-width: $height / 2 + px 0 $height / 2 + px $width + px;\n    border-color: transparent transparent transparent $bg; }\n  @if $direction == b {\n    border-width: $height + px $width / 2 + px 0 $width / 2 + px;\n    border-color: $bg transparent transparent transparent; }\n  @if $direction == l {\n    border-width: $height / 2 + px $width + px $height / 2 + px 0;\n    border-color: transparent $bg transparent transparent; }\n  @if $direction == tl {\n    border-width: $height + px $width + px 0 0;\n    border-color: $bg transparent transparent transparent; }\n  @if $direction == tr {\n    border-width: 0 $width + px $height + px 0;\n    border-color: transparent $bg transparent transparent; }\n  @if $direction == br {\n    border-width: 0 0 $height + px $width + px;\n    border-color: transparent transparent $bg transparent; }\n  @if $direction == bl {\n    border-width: $width + px 0 0 $height + px;\n    border-color: transparent transparent transparent $bg; } }\n// example\n// +arr(500,50, #000, l)\n// +arr(500,50, #000, bl)\n\n@mixin rotate($var) {\n  transform: rotate($var+deg); }\n\n@mixin blur($var) {\n  filter: blur($var); }\n\n@mixin better-blur($radius) {\n  filter: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a' x='0' y='0' width='1' height='1' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='#{$radius}' result='b'/%3E%3CfeMorphology operator='dilate' radius='#{$radius}'/%3E %3CfeMerge%3E%3CfeMergeNode/%3E%3CfeMergeNode in='b'/%3E%3C/feMerge%3E%3C/filter%3E %3C/svg%3E#a\"); }\n\n@mixin scale($var) {\n  transform: scale($var); }\n\n@mixin counter($var, $sep) {\n  counter-reset: list + $var;\n  > li {\n    &:before {\n      content: counter(list + $var) $sep;\n      counter-increment: list + $var; } } }\n\n@mixin f($name, $font-size: null, $letter-spacing: null) {\n  $font-family: null;\n  @if $name == \"l\" {\n    $font-family: \"light\"; }\n  font-family: $font-family;\n  font-weight: normal;\n  @if $font-size != null {\n    font-size: $font-size + px; }\n  @if $letter-spacing != null {\n    letter-spacing: ($letter-spacing / 1000) + em; } }\n\n"]}